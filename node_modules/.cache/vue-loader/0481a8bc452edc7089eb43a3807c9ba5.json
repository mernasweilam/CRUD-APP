{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue","mtime":1639917750960},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBjcnVkQXhpb3MgZnJvbSAnLi4vY29yZS9jcnVkQXhpb3MnCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUG9zdENvbXBvbmVudCcsCiAgcHJvcHM6IHsKICB9LAogICAgZGF0YSgpewogICAgICByZXR1cm57CiAgICAgICAgICBwb3N0czogW10sCiAgICAgICAgICAvLyB0ZXh0OiAnJywKICAgICAgICAgIHNob3VsZERpc2FibGU6IHRydWUKICAgICAgfQogIH0sCgogIG1ldGhvZHM6ewogICAgLy9yZXR1cm4gcG9zdHMKICAgIGdldEFsbFBvc3RzKCl7CiAgICAgIGNydWRBeGlvcy5nZXQoYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvcG9zdHNgKS50aGVuKGRhdGEgPT57CiAgICAgICAgdGhpcy5wb3N0cyA9IGRhdGEuZGF0YQogICAgICAgIGNvbnNvbGUubG9nKCdkYXRhJywgZGF0YS5kYXRhKTsKICAgICAgfSkKICAgIH0sCiAgICAvL2FkZCBuZXcgcG9zdAogICAgaW5zZXJ0UG9zdCh0ZXh0KXsKICAgICAgY3J1ZEF4aW9zLnBvc3QoYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvcG9zdHNgLCB7IHRleHQ6IHRleHR9ICkKICAgICAgLnRoZW4odGhpcy50ZXh0ID0gdGV4dCkKICAgICAgLmZpbmFsbHkodGhpcy5nZXRBbGxQb3N0cygpKQogICAgfSwKCiAgICAvL2RlbGV0ZSBwb3N0CiAgICBkZWxldGVQb3N0KGlkKXsKICAgICAgY3J1ZEF4aW9zLmRlbGV0ZShgaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9wb3N0cy8ke2lkfWApCiAgICAgIC5maW5hbGx5KHRoaXMuZ2V0QWxsUG9zdHMoKSkKICAgICAgCiAgICB9LAogICAgLy91cGRhdGUgcG9zdAogICAgICBlZGl0UG9zdChpZCwgdGV4dCl7CiAgICAgICAgLy8gdGV4dCA9IHRoaXMuJHJlZnMudGV4dEZpZWxkLnZhbHVlCiAgICAgICAgY3J1ZEF4aW9zLnBvc3QoYGh0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvcG9zdHMvJHtpZH1gLAogICAgICAgIHsgdGV4dDogdGV4dCwKICAgICAgICB1cGRhdGVkQXQ6IG5ldyBEYXRlKCl9KQogICAgICAgIC50aGVuKHRoaXMudGV4dCA9IHRleHQpCiAgICAgICAgLnRoZW4odGhpcy5zaG91bGREaXNhYmxlID0gZmFsc2UpCiAgICAgICAgIC5maW5hbGx5KHRoaXMuZ2V0QWxsUG9zdHMoKSkKICAgICAgICBjb25zb2xlLmxvZygnZWwnLHRleHQpCiAgICAgICAgIAogICAgICB9CiAgfSwKICBjcmVhdGVkKCl7CiAgICB0aGlzLmdldEFsbFBvc3RzKCk7CiAgfQp9Cg=="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue"],"names":[],"mappings":"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","file":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"Posts\">\n   <table>\n    <tr>\n      <th>text</th>\n      <th>Created At</th>\n      <th>updated At</th>\n      <th>Edit</th>\n      <th>Delete</th>\n    </tr>\n    <tr v-for=\"post in posts\" :key=\"post._id\">\n      <!-- <td>{{post.text}}</td> -->\n      <td><input type=\"text\" :readonly=\"shouldDisable\" @keyup.enter=\"getAllPosts\" ref=\"textField\" v-model=\"post.text\">{{post.text}}</td>\n      <td>{{post.createdAt}}</td>\n      <td v-if=\"post.updatedAt\">{{post.updatedAt}}</td>\n      <td><span @click=\"editPost(post._id, post.text)\">Edit</span></td>\n      <td><span @click=\"deletePost(post._id)\">Delete</span></td>\n    </tr>\n \n <!-- <input type=\"text\" v-model=\"text\" /><button @click=\"insertPost(text)\">add</button> -->\n\n</table>\n    \n    \n    \n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'PostComponent',\n  props: {\n  },\n    data(){\n      return{\n          posts: [],\n          // text: '',\n          shouldDisable: true\n      }\n  },\n\n  methods:{\n    //return posts\n    getAllPosts(){\n      crudAxios.get(`http://localhost:5000/api/posts`).then(data =>{\n        this.posts = data.data\n        console.log('data', data.data);\n      })\n    },\n    //add new post\n    insertPost(text){\n      crudAxios.post(`http://localhost:5000/api/posts`, { text: text} )\n      .then(this.text = text)\n      .finally(this.getAllPosts())\n    },\n\n    //delete post\n    deletePost(id){\n      crudAxios.delete(`http://localhost:5000/api/posts/${id}`)\n      .finally(this.getAllPosts())\n      \n    },\n    //update post\n      editPost(id, text){\n        // text = this.$refs.textField.value\n        crudAxios.post(`http://localhost:5000/api/posts/${id}`,\n        { text: text,\n        updatedAt: new Date()})\n        .then(this.text = text)\n        .then(this.shouldDisable = false)\n         .finally(this.getAllPosts())\n        console.log('el',text)\n         \n      }\n  },\n  created(){\n    this.getAllPosts();\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  /* border: 1px solid #dddddd; */\n  text-align: left;\n  padding: 8px;\n}\n\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n</style>\n"]}]}