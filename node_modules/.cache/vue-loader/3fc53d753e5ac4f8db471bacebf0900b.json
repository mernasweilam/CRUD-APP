{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue","mtime":1640694218383},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmltcG9ydCBjcnVkQXhpb3MgZnJvbSAnLi4vY29yZS9jcnVkQXhpb3MnCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBTZWFyY2hDb21wb25lbnQgZnJvbSAnLi4vY29tcG9uZW50cy9TZWFyY2hDb21wb25lbnQudnVlJwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlNlYXJjaFJlc3VsdCIsCiAgY29tcG9uZW50czogewogICAgU2VhcmNoQ29tcG9uZW50CiAgfSwKICAKICBkYXRhKCl7CiAgICAgIHJldHVybnsKICAgICAgICAgICB0YXNrczogW10sCiAgICAgICAgICAgIGVtcGxveWVlczogW10sCiAgICAgICAgICAgIHRlYW1zOiBbXSwKICAgICAgICAgIGRpc2FibGU6IGZhbHNlLAogICAgICB9CiAgfSwKCiAgbWV0aG9kczogewogICAgLy9mZXRjaCBzZWFyY2ggcmVzdWx0IHdoZW4gdXNlciBpbml0aWFsbHkgc2VhcmNoIGZvciBhbnkgcXVlcnkKICAgIGZldGNoU2VhcmNoUmVzdWx0KHEpewogICAgICAgIGxldCBlbXBsb3llZXNSZXF1ZXN0ID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvZW1wbG95ZWVzJwogICAgICAgIGxldCB0YXNrc1JlcXVlc3QgPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS90YXNrcycKICAgICAgICBsZXQgdGVhbXNSZXF1ZXN0ID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvdGVhbXMnCiAgICAgIHRoaXMuJHJvdXRlci5wdXNoKHsgcXVlcnk6IHsgcXVlcnk6IGVuY29kZVVSSUNvbXBvbmVudChxKX19KTsKICAgICAgICBheGlvcy5hbGwoW2VtcGxveWVlc1JlcXVlc3QsIHRhc2tzUmVxdWVzdCwgdGVhbXNSZXF1ZXN0XSkudGhlbihheGlvcy5zcHJlYWQoKC4uLnJlc3BvbnNlcykgPT4gewogICAgICAgICAgICBjb25zdCBlbXBsb3llZXNSZXNwb25zZT0gcmVzcG9uc2VzWzBdCiAgICAgICAgICAgIGNvbnN0IHRhc2tzUmVzcG9uc2U9IHJlc3BvbnNlc1sxXQogICAgICAgICAgICBjb25zdCB0ZWFtc1Jlc3BvbnNlPSByZXNwb25zZXNbMl0KICAgICAgICAgICAgLy9lbXBsb3llZXMKICAgICAgICAgICBjcnVkQXhpb3MuZ2V0KGVtcGxveWVlc1Jlc3BvbnNlKSAKICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hlZEVtcGxveWVlcyA9IGRhdGEuZGF0YS5maWx0ZXIoIGVtcCA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVtcC5uYW1lLnRvTG93ZXJDYXNlKCkgPT09IHEKICAgICAgICAgICAgICAgIH0pOyAgCiAgICAgICAgICAgIHRoaXMuZW1wbG95ZWVzID0gc2VhcmNoZWRFbXBsb3llZXMKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLy90YXNrcwogICAgICAgICAgIGNydWRBeGlvcy5nZXQodGFza3NSZXNwb25zZSkgCiAgICAgICAgICAgIC50aGVuKGRhdGEgPT4gewogICAgICAgICAgICAgICAgY29uc3Qgc2VhcmNoZWRUYXNrcz0gZGF0YS5kYXRhLmZpbHRlciggdGFzayA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhc2sudGFza05hbWUudG9Mb3dlckNhc2UoKSA9PT0gcSB8fCB0YXNrLnRhc2tOYW1lLmluY2x1ZGVzKHEpIHx8IHRhc2sudGFza0Rlc2MuaW5jbHVkZXMocSkKICAgICAgICAgICAgICAgIH0pOyAgIAogICAgICAgICAgICB0aGlzLnRhc2tzPSBzZWFyY2hlZFRhc2tzCgogICAgICAgICAgICB9KQogICAgICAgICAgICAvL3RlYW1zCiAgICAgICAgICAgY3J1ZEF4aW9zLmdldCh0ZWFtc1Jlc3BvbnNlKSAKICAgICAgICAgICAgLnRoZW4oZGF0YSA9PiB7CiAgICAgICAgICAgICAgICBjb25zdCBzZWFyY2hlZFRlYW1zID0gZGF0YS5kYXRhLmZpbHRlciggdGVhbSA9PiB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRlYW0ubmFtZS50b0xvd2VyQ2FzZSgpID09PSBxIHx8IHRlYW0ubmFtZS5pbmNsdWRlcyhxKQogICAgICAgICAgICAgICAgfSk7ICAgCiAgICAgICAgICAgIHRoaXMudGVhbXM9IHNlYXJjaGVkVGVhbXMKCiAgICAgICAgICAgIH0pCiAgICAgICAgfSkpCiAgICB9CgogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGlmKHRoaXMuJHJvdXRlLnF1ZXJ5LnF1ZXJ5KSB7CiAgICAgIHRoaXMudCh0aGlzLiRyb3V0ZS5xdWVyeS5xdWVyeSkKICAgIH0KICB9Cn0K"},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue"],"names":[],"mappings":"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CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;YAC1F,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACpC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAChC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;WACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAC9B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE;gBACV,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC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","file":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue","sourceRoot":"","sourcesContent":["<template>\n  <div class=\"search-result\">\n      <SearchComponent @searchActivated=\"fetchSearchResult\"/>\n    <div class=\"content\" v-if=\"employees.length\">\n       <!-- <Employee v-for=\"employee in employees\" :key=\"employee.id\"/> -->\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <!-- <th>Employee code</th> -->\n                <th>Employee name</th>\n                <th>Join Date</th>\n                <th>Skills</th>\n            </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"employee in employees\" :key=\"employee._id\">\n                    <td>{{employee.name}}</td>\n                    <td>{{employee.joinDate}}</td>\n                    <td>\n                        <ul v-for=\"skill in employee.skills\" :key=\"skill\">\n                            <li>{{skill}}</li>\n                        </ul>\n                    </td>  \n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"content\" v-if=\"tasks.length\">\n        <table class=\"table table-striped\">\n                <thead>\n                <tr>\n                <th>Task code</th>\n                <th>task Name</th>\n                <th>Task Description</th>\n                <th>Employee Code</th>\n                <th>Logged Time</th>\n                <th>Start Date</th>\n                </tr>\n                </thead>\n            <tbody>\n                <tr v-for=\"task in tasks\" :key=\"task._id\">\n                    <td>{{task.taskCode}}</td>\n                    <td>{{task.taskName}}</td>\n                    <td>{{task.taskDesc}}</td>\n                    <td>{{task.logs.code}}</td>\n                    <td>{{loggedTime}}</td>\n                    <td>{{task.logs.startDate}}</td>\n                </tr>\n            </tbody>\n            </table>\n    </div>\n    <div class=\"content\" v-if=\"teams.length\">\n        <table class=\"table table-striped\" >\n            <thead>\n            <tr>\n            <th>Team name</th>\n            <th>StartDate</th>\n            <th>EndDate</th>\n            </tr>\n            </thead>\n        <tbody>\n            <tr v-for=\"team in teams\" :key=\"team._id\">\n            <td>{{team.name}}</td>\n            <td>{{team.startDate}}</td>\n            <td v-if=\"team.endDate\">{{team.endDate}}</td>\n            <td v-else>Team still exists</td>\n        </tr>\n        </tbody>\n        </table>\n    </div>\n  </div>\n</template>\n<style>\n</style>\n<script>\nimport crudAxios from '../core/crudAxios'\nimport axios from 'axios';\nimport SearchComponent from '../components/SearchComponent.vue'\nexport default {\n  name: \"SearchResult\",\n  components: {\n    SearchComponent\n  },\n  \n  data(){\n      return{\n           tasks: [],\n            employees: [],\n            teams: [],\n          disable: false,\n      }\n  },\n\n  methods: {\n    //fetch search result when user initially search for any query\n    fetchSearchResult(q){\n        let employeesRequest = 'http://localhost:5000/api/employees'\n        let tasksRequest = 'http://localhost:5000/api/tasks'\n        let teamsRequest = 'http://localhost:5000/api/teams'\n      this.$router.push({ query: { query: encodeURIComponent(q)}});\n        axios.all([employeesRequest, tasksRequest, teamsRequest]).then(axios.spread((...responses) => {\n            const employeesResponse= responses[0]\n            const tasksResponse= responses[1]\n            const teamsResponse= responses[2]\n            //employees\n           crudAxios.get(employeesResponse) \n            .then(data => {\n                const searchedEmployees = data.data.filter( emp => {\n                    return emp.name.toLowerCase() === q\n                });  \n            this.employees = searchedEmployees\n            })\n            //tasks\n           crudAxios.get(tasksResponse) \n            .then(data => {\n                const searchedTasks= data.data.filter( task => {\n                    return task.taskName.toLowerCase() === q || task.taskName.includes(q) || task.taskDesc.includes(q)\n                });   \n            this.tasks= searchedTasks\n\n            })\n            //teams\n           crudAxios.get(teamsResponse) \n            .then(data => {\n                const searchedTeams = data.data.filter( team => {\n                    return team.name.toLowerCase() === q || team.name.includes(q)\n                });   \n            this.teams= searchedTeams\n\n            })\n        }))\n    }\n\n  },\n  created() {\n    if(this.$route.query.query) {\n      this.t(this.$route.query.query)\n    }\n  }\n}\n</script>\n"]}]}