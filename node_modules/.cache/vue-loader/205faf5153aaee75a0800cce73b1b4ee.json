{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue?vue&type=template&id=f1d4c382&scoped=true","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue","mtime":1640281584777},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdj4KICAgIDxkaXYgY2xhc3M9InRhc2tzIj4KICAgICAgICA8aDM+VGFza3M8L2gzPgogICAgICA8dGFibGUgY2xhc3M9InRhYmxlIHRhYmxlLXN0cmlwZWQiPgogICAgICAgIDx0aGVhZD4KICAgICAgICA8dHI+CiAgICAgICAgICA8dGg+VGFzayBjb2RlPC90aD4KICAgICAgICAgIDx0aD50YXNrIE5hbWU8L3RoPgogICAgICAgICAgPHRoPlRhc2sgRGVzY3JpcHRpb248L3RoPgogICAgICAgICAgPHRoPkVtcGxveWVlIENvZGU8L3RoPgogICAgICAgICAgPHRoPkxvZ2dlZCBUaW1lPC90aD4KICAgICAgICAgIDx0aD5TdGFydCBEYXRlPC90aD4KICAgICAgICA8L3RyPgogICAgICAgIDwvdGhlYWQ+CiAgICAgIDx0Ym9keT4KICAgICAgICA8dHIgdi1mb3I9InRhc2sgaW4gdGFza3MiIDprZXk9InRhc2suX2lkIj4KICAgICAgICAgICAgPHRkPnt7dGFzay50YXNrQ29kZX19PC90ZD4KICAgICAgICAgICAgPHRkPnt7dGFzay50YXNrTmFtZX19PC90ZD4KICAgICAgICAgICAgPHRkPnt7dGFzay50YXNrRGVzY319PC90ZD4KICAgICAgICAgICAgPHRkPnt7dGFzay5sb2dzLmNvZGV9fTwvdGQ+CiAgICAgICAgICAgICA8dGQ+e3tsb2dnZWRUaW1lfX08L3RkPgogICAgICAgICAgICAgIDx0ZD57e3Rhc2subG9ncy5zdGFydERhdGV9fTwvdGQ+CiAgICAgICAgPC90cj4KICAgICAgPC90Ym9keT4KICAgIDwvdGFibGU+CgogICAgPC9kaXY+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue"],"names":[],"mappings":"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","file":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"tasks\">\n        <h3>Tasks</h3>\n      <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th>Task code</th>\n          <th>task Name</th>\n          <th>Task Description</th>\n          <th>Employee Code</th>\n          <th>Logged Time</th>\n          <th>Start Date</th>\n        </tr>\n        </thead>\n      <tbody>\n        <tr v-for=\"task in tasks\" :key=\"task._id\">\n            <td>{{task.taskCode}}</td>\n            <td>{{task.taskName}}</td>\n            <td>{{task.taskDesc}}</td>\n            <td>{{task.logs.code}}</td>\n             <td>{{loggedTime}}</td>\n              <td>{{task.logs.startDate}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'Tasks',\n  props: {\n  },\n  components: {\n  },\n    data(){\n      return{\n          tasks: [],\n          loggedTimeInSec:''\n      }\n  },\n\n  methods:{\n    //return tasks\n    getAllTasks(){\n      crudAxios.get(`http://localhost:5000/api/tasks`).then(data =>{\n        this.tasks = data.data\n        \n        this.tasks.forEach(element => \n        console.log('element', element.logs.loggedTime,\n        this.loggedTimeInSec = element.logs.loggedTime))\n      })\n    }\n  },\n  mounted(){\n    this.getAllTasks();\n  },\n   computed: {\n    // a computed getter\n    loggedTime: function () {\n       const time = this.loggedTimeInSec.slice(-1);\n       const timeValue = this.loggedTimeInSec.slice(0,-1);\n       if( time == 'h'){\n            var milliseconds = timeValue * 60 * 60 *1000;\n       }\n       else if( time == 'm'){\n            milliseconds = timeValue * 60 * 1000;\n       }\n        return milliseconds\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.tasks{\n    padding: 20px;\n}\n.fa{\n    cursor: pointer;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\n</style>\n"]}]}