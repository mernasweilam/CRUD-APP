{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue?vue&type=style&index=0&id=f1d4c382&scoped=true&lang=css","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue","mtime":1640281584777},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci50YXNrc3sKICAgIHBhZGRpbmc6IDIwcHg7Cn0KLmZhewogICAgY3Vyc29yOiBwb2ludGVyOwp9CmgzIHsKICBtYXJnaW46IDQwcHggMCAwOwp9CnVsIHsKICBsaXN0LXN0eWxlLXR5cGU6IG5vbmU7CiAgcGFkZGluZzogMDsKfQpsaSB7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIG1hcmdpbjogMCAxMHB4Owp9Cgo="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue"],"names":[],"mappings":";AAgFA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACjB;AACA,CAAC,CAAC,CAAC;IACC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACnB;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC;AAClB;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACZ;AACA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACrB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;AAChB","file":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue","sourceRoot":"","sourcesContent":["<template>\n  <div>\n    <div class=\"tasks\">\n        <h3>Tasks</h3>\n      <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th>Task code</th>\n          <th>task Name</th>\n          <th>Task Description</th>\n          <th>Employee Code</th>\n          <th>Logged Time</th>\n          <th>Start Date</th>\n        </tr>\n        </thead>\n      <tbody>\n        <tr v-for=\"task in tasks\" :key=\"task._id\">\n            <td>{{task.taskCode}}</td>\n            <td>{{task.taskName}}</td>\n            <td>{{task.taskDesc}}</td>\n            <td>{{task.logs.code}}</td>\n             <td>{{loggedTime}}</td>\n              <td>{{task.logs.startDate}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'Tasks',\n  props: {\n  },\n  components: {\n  },\n    data(){\n      return{\n          tasks: [],\n          loggedTimeInSec:''\n      }\n  },\n\n  methods:{\n    //return tasks\n    getAllTasks(){\n      crudAxios.get(`http://localhost:5000/api/tasks`).then(data =>{\n        this.tasks = data.data\n        \n        this.tasks.forEach(element => \n        console.log('element', element.logs.loggedTime,\n        this.loggedTimeInSec = element.logs.loggedTime))\n      })\n    }\n  },\n  mounted(){\n    this.getAllTasks();\n  },\n   computed: {\n    // a computed getter\n    loggedTime: function () {\n       const time = this.loggedTimeInSec.slice(-1);\n       const timeValue = this.loggedTimeInSec.slice(0,-1);\n       if( time == 'h'){\n            var milliseconds = timeValue * 60 * 60 *1000;\n       }\n       else if( time == 'm'){\n            milliseconds = timeValue * 60 * 1000;\n       }\n        return milliseconds\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.tasks{\n    padding: 20px;\n}\n.fa{\n    cursor: pointer;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\n</style>\n"]}]}