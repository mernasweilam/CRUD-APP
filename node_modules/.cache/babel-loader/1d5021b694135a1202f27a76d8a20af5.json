{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue?vue&type=template&id=f1d4c382&scoped=true","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue","mtime":1640281584777},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/babel.config.js","mtime":1639852633330},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgY3JlYXRlRWxlbWVudFZOb2RlIGFzIF9jcmVhdGVFbGVtZW50Vk5vZGUsIHJlbmRlckxpc3QgYXMgX3JlbmRlckxpc3QsIEZyYWdtZW50IGFzIF9GcmFnbWVudCwgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUVsZW1lbnRCbG9jayBhcyBfY3JlYXRlRWxlbWVudEJsb2NrLCB0b0Rpc3BsYXlTdHJpbmcgYXMgX3RvRGlzcGxheVN0cmluZywgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aFNjb3BlSWQgPSBmdW5jdGlvbiBfd2l0aFNjb3BlSWQobikgewogIHJldHVybiBfcHVzaFNjb3BlSWQoImRhdGEtdi1mMWQ0YzM4MiIpLCBuID0gbigpLCBfcG9wU2NvcGVJZCgpLCBuOwp9OwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJ0YXNrcyIKfTsKCnZhciBfaG9pc3RlZF8yID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIG51bGwsICJUYXNrcyIsIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKdmFyIF9ob2lzdGVkXzMgPSB7CiAgY2xhc3M6ICJ0YWJsZSB0YWJsZS1zdHJpcGVkIgp9OwoKdmFyIF9ob2lzdGVkXzQgPSAvKiNfX1BVUkVfXyovX3dpdGhTY29wZUlkKGZ1bmN0aW9uICgpIHsKICByZXR1cm4gLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoZWFkIiwgbnVsbCwgWy8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJ0ciIsIG51bGwsIFsvKiNfX1BVUkVfXyovX2NyZWF0ZUVsZW1lbnRWTm9kZSgidGgiLCBudWxsLCAiVGFzayBjb2RlIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJ0aCIsIG51bGwsICJ0YXNrIE5hbWUiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoIiwgbnVsbCwgIlRhc2sgRGVzY3JpcHRpb24iKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoIiwgbnVsbCwgIkVtcGxveWVlIENvZGUiKSwgLyojX19QVVJFX18qL19jcmVhdGVFbGVtZW50Vk5vZGUoInRoIiwgbnVsbCwgIkxvZ2dlZCBUaW1lIiksIC8qI19fUFVSRV9fKi9fY3JlYXRlRWxlbWVudFZOb2RlKCJ0aCIsIG51bGwsICJTdGFydCBEYXRlIildKV0sIC0xCiAgLyogSE9JU1RFRCAqLwogICk7Cn0pOwoKZXhwb3J0IGZ1bmN0aW9uIHJlbmRlcihfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJkaXYiLCBudWxsLCBbX2NyZWF0ZUVsZW1lbnRWTm9kZSgiZGl2IiwgX2hvaXN0ZWRfMSwgW19ob2lzdGVkXzIsIF9jcmVhdGVFbGVtZW50Vk5vZGUoInRhYmxlIiwgX2hvaXN0ZWRfMywgW19ob2lzdGVkXzQsIF9jcmVhdGVFbGVtZW50Vk5vZGUoInRib2R5IiwgbnVsbCwgWyhfb3BlbkJsb2NrKHRydWUpLCBfY3JlYXRlRWxlbWVudEJsb2NrKF9GcmFnbWVudCwgbnVsbCwgX3JlbmRlckxpc3QoJGRhdGEudGFza3MsIGZ1bmN0aW9uICh0YXNrKSB7CiAgICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlRWxlbWVudEJsb2NrKCJ0ciIsIHsKICAgICAga2V5OiB0YXNrLl9pZAogICAgfSwgW19jcmVhdGVFbGVtZW50Vk5vZGUoInRkIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyh0YXNrLnRhc2tDb2RlKSwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgidGQiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKHRhc2sudGFza05hbWUpLCAxCiAgICAvKiBURVhUICovCiAgICApLCBfY3JlYXRlRWxlbWVudFZOb2RlKCJ0ZCIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcodGFzay50YXNrRGVzYyksIDEKICAgIC8qIFRFWFQgKi8KICAgICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInRkIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZyh0YXNrLmxvZ3MuY29kZSksIDEKICAgIC8qIFRFWFQgKi8KICAgICksIF9jcmVhdGVFbGVtZW50Vk5vZGUoInRkIiwgbnVsbCwgX3RvRGlzcGxheVN0cmluZygkb3B0aW9ucy5sb2dnZWRUaW1lKSwgMQogICAgLyogVEVYVCAqLwogICAgKSwgX2NyZWF0ZUVsZW1lbnRWTm9kZSgidGQiLCBudWxsLCBfdG9EaXNwbGF5U3RyaW5nKHRhc2subG9ncy5zdGFydERhdGUpLCAxCiAgICAvKiBURVhUICovCiAgICApXSk7CiAgfSksIDEyOAogIC8qIEtFWUVEX0ZSQUdNRU5UICovCiAgKSldKV0pXSldKTsKfQ=="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue"],"names":[],"mappings":";;;;;;;AAES,EAAA,KAAK,EAAC;;;;sBACP,mBAAA,CAAc,IAAd,EAAc,IAAd,EAAI,OAAJ,EAAS,CAAA;AAAA;AAAT,G;;;;AACK,EAAA,KAAK,EAAC;;;;sBACX,mBAAA,CASQ,OATR,EASQ,IATR,EASQ,C,aARR,mBAAA,CAOK,IAPL,EAOK,IAPL,EAOK,C,aANH,mBAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,CAMG,E,aALH,mBAAA,CAAkB,IAAlB,EAAkB,IAAlB,EAAI,WAAJ,CAKG,E,aAJH,mBAAA,CAAyB,IAAzB,EAAyB,IAAzB,EAAI,kBAAJ,CAIG,E,aAHH,mBAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAI,eAAJ,CAGG,E,aAFH,mBAAA,CAAoB,IAApB,EAAoB,IAApB,EAAI,aAAJ,CAEG,E,aADH,mBAAA,CAAmB,IAAnB,EAAmB,IAAnB,EAAI,YAAJ,CACG,CAPL,CAQQ,CATR,E;;AAAA,G;;;;uBAJN,mBAAA,CA2BM,KA3BN,EA2BM,IA3BN,EA2BM,CA1BJ,mBAAA,CAyBM,KAzBN,EAAA,UAAA,EAyBM,CAxBF,UAwBE,EAvBJ,mBAAA,CAqBM,OArBN,EAAA,UAAA,EAqBM,CApBJ,UAoBI,EAVN,mBAAA,CASQ,OATR,EASQ,IATR,EASQ,E,kBARN,mBAAA,CAOK,SAPL,EAOK,IAPL,EAOK,WAAA,CAPc,KAAA,CAAA,KAOd,EAPmB,UAAb,IAAa,EAAT;yBAAf,mBAAA,CAOK,IAPL,EAOK;AAPsB,MAAA,GAAG,EAAE,IAAI,CAAC;AAOhC,KAPL,E,CACI,mBAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAA0B,gBAAA,CAApB,IAAI,CAAC,QAAe,CAA1B,EAAmB;AAAA;AAAnB,K,EACA,mBAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAA0B,gBAAA,CAApB,IAAI,CAAC,QAAe,CAA1B,EAAmB;AAAA;AAAnB,K,EACA,mBAAA,CAA0B,IAA1B,EAA0B,IAA1B,EAA0B,gBAAA,CAApB,IAAI,CAAC,QAAe,CAA1B,EAAmB;AAAA;AAAnB,K,EACA,mBAAA,CAA2B,IAA3B,EAA2B,IAA3B,EAA2B,gBAAA,CAArB,IAAI,CAAC,IAAL,CAAU,IAAW,CAA3B,EAAoB;AAAA;AAApB,K,EACC,mBAAA,CAAuB,IAAvB,EAAuB,IAAvB,EAAuB,gBAAA,CAAjB,QAAA,CAAA,UAAiB,CAAvB,EAAgB;AAAA;AAAhB,K,EACC,mBAAA,CAAgC,IAAhC,EAAgC,IAAhC,EAAgC,gBAAA,CAA1B,IAAI,CAAC,IAAL,CAAU,SAAgB,CAAhC,EAAyB;AAAA;AAAzB,K,CANN,C;GAOK,CAPL,E;;AAAA,GAQM,EATR,CAUM,CArBN,CAuBI,CAzBN,CA0BI,CA3BN,C","sourcesContent":["<template>\n  <div>\n    <div class=\"tasks\">\n        <h3>Tasks</h3>\n      <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th>Task code</th>\n          <th>task Name</th>\n          <th>Task Description</th>\n          <th>Employee Code</th>\n          <th>Logged Time</th>\n          <th>Start Date</th>\n        </tr>\n        </thead>\n      <tbody>\n        <tr v-for=\"task in tasks\" :key=\"task._id\">\n            <td>{{task.taskCode}}</td>\n            <td>{{task.taskName}}</td>\n            <td>{{task.taskDesc}}</td>\n            <td>{{task.logs.code}}</td>\n             <td>{{loggedTime}}</td>\n              <td>{{task.logs.startDate}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'Tasks',\n  props: {\n  },\n  components: {\n  },\n    data(){\n      return{\n          tasks: [],\n          loggedTimeInSec:''\n      }\n  },\n\n  methods:{\n    //return tasks\n    getAllTasks(){\n      crudAxios.get(`http://localhost:5000/api/tasks`).then(data =>{\n        this.tasks = data.data\n        \n        this.tasks.forEach(element => \n        console.log('element', element.logs.loggedTime,\n        this.loggedTimeInSec = element.logs.loggedTime))\n      })\n    }\n  },\n  mounted(){\n    this.getAllTasks();\n  },\n   computed: {\n    // a computed getter\n    loggedTime: function () {\n       const time = this.loggedTimeInSec.slice(-1);\n       const timeValue = this.loggedTimeInSec.slice(0,-1);\n       if( time == 'h'){\n            var milliseconds = timeValue * 60 * 60 *1000;\n       }\n       else if( time == 'm'){\n            milliseconds = timeValue * 60 * 1000;\n       }\n        return milliseconds\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.tasks{\n    padding: 20px;\n}\n.fa{\n    cursor: pointer;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\n</style>\n"],"sourceRoot":""}]}