{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/TeamComponent.vue?vue&type=template&id=0e9271c0&scoped=true","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/TeamComponent.vue","mtime":1639922202829},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/babel.config.js","mtime":1639852633330},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgdG9EaXNwbGF5U3RyaW5nIGFzIF90b0Rpc3BsYXlTdHJpbmcsIGNyZWF0ZUVsZW1lbnRWTm9kZSBhcyBfY3JlYXRlRWxlbWVudFZOb2RlLCBjcmVhdGVUZXh0Vk5vZGUgYXMgX2NyZWF0ZVRleHRWTm9kZSwgY3JlYXRlU3RhdGljVk5vZGUgYXMgX2NyZWF0ZVN0YXRpY1ZOb2RlLCBvcGVuQmxvY2sgYXMgX29wZW5CbG9jaywgY3JlYXRlRWxlbWVudEJsb2NrIGFzIF9jcmVhdGVFbGVtZW50QmxvY2ssIHB1c2hTY29wZUlkIGFzIF9wdXNoU2NvcGVJZCwgcG9wU2NvcGVJZCBhcyBfcG9wU2NvcGVJZCB9IGZyb20gInZ1ZSI7Cgp2YXIgX3dpdGhTY29wZUlkID0gZnVuY3Rpb24gX3dpdGhTY29wZUlkKG4pIHsKICByZXR1cm4gX3B1c2hTY29wZUlkKCJkYXRhLXYtMGU5MjcxYzAiKSwgbiA9IG4oKSwgX3BvcFNjb3BlSWQoKSwgbjsKfTsKCnZhciBfaG9pc3RlZF8xID0gewogIGNsYXNzOiAidGVhbXMiCn07Cgp2YXIgX2hvaXN0ZWRfMiA9IC8qI19fUFVSRV9fKi9fY3JlYXRlU3RhdGljVk5vZGUoIjxmb3JtIGRhdGEtdi0wZTkyNzFjMD48ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiIGRhdGEtdi0wZTkyNzFjMD48bGFiZWwgZGF0YS12LTBlOTI3MWMwPiBUZWFtIE5hbWU8L2xhYmVsPjxpbnB1dCB0eXBlPVwidGV4dFwiIGNsYXNzPVwiZm9ybS1jb250cm9sXCIgbmFtZT1cInRlYW1OYW1lXCIgcGxhY2Vob2xkZXI9XCJUZWFtIE5hbWVcIiBkYXRhLXYtMGU5MjcxYzA+PC9kaXY+PGRpdiBjbGFzcz1cImZvcm0tcm93XCIgZGF0YS12LTBlOTI3MWMwPjxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIGNvbFwiIGRhdGEtdi0wZTkyNzFjMD48bGFiZWwgZGF0YS12LTBlOTI3MWMwPiBTdGFydCBEYXRlPC9sYWJlbD48aW5wdXQgdHlwZT1cInRleHRcIiBjbGFzcz1cImZvcm0tY29udHJvbFwiIG5hbWU9XCJ0ZWFtTmFtZVwiIHBsYWNlaG9sZGVyPVwiVGVhbSBOYW1lXCIgZGF0YS12LTBlOTI3MWMwPjwvZGl2PjxkaXYgY2xhc3M9XCJmb3JtLWdyb3VwIGNvbFwiIGRhdGEtdi0wZTkyNzFjMD48bGFiZWwgZGF0YS12LTBlOTI3MWMwPiBFbmQgRGF0ZTwvbGFiZWw+PGlucHV0IHR5cGU9XCJ0ZXh0XCIgY2xhc3M9XCJmb3JtLWNvbnRyb2xcIiBuYW1lPVwidGVhbU5hbWVcIiBwbGFjZWhvbGRlcj1cIlRlYW0gTmFtZVwiIGRhdGEtdi0wZTkyNzFjMD48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiZm9ybS1ncm91cFwiIGRhdGEtdi0wZTkyNzFjMD48YnV0dG9uIHR5cGU9XCJzdWJtaXRcIiBjbGFzcz1cImJ0biBidG4taW5mb1wiIGRhdGEtdi0wZTkyNzFjMD48aSBjbGFzcz1cImZhIGZhLWRhdGFiYXNlXCIgZGF0YS12LTBlOTI3MWMwPjwvaT5TdWJtaXQ8L2J1dHRvbj48L2Rpdj48L2Zvcm0+IiwgMSk7CgpleHBvcnQgZnVuY3Rpb24gcmVuZGVyKF9jdHgsIF9jYWNoZSwgJHByb3BzLCAkc2V0dXAsICRkYXRhLCAkb3B0aW9ucykgewogIHJldHVybiBfb3BlbkJsb2NrKCksIF9jcmVhdGVFbGVtZW50QmxvY2soImRpdiIsIF9ob2lzdGVkXzEsIFtfY3JlYXRlRWxlbWVudFZOb2RlKCJoMyIsIG51bGwsIF90b0Rpc3BsYXlTdHJpbmcoJGRhdGEudmlld1RpdGxlKSwgMQogIC8qIFRFWFQgKi8KICApLCBfaG9pc3RlZF8yXSk7Cn0="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/TeamComponent.vue"],"names":[],"mappings":";;;;;;;AACO,EAAA,KAAK,EAAC;;;;;;uBAAX,mBAAA,CAsBM,KAtBN,EAAA,UAAA,EAsBM,CArBF,mBAAA,CAAsB,IAAtB,EAAsB,IAAtB,EAAsB,gBAAA,CAAhB,KAAA,CAAA,SAAgB,CAAtB,EAAe;AAAA;AAAf,GAqBE,EApBF,UAoBE,CAtBN,C","sourcesContent":["<template>\n  <div class=\"teams\">\n      <h3>{{viewTitle}}</h3>\n      <form>\n          <div class=\"form-group\">\n              <label> Team Name</label>\n              <input type=\"text\" class=\"form-control\" name=\"teamName\" placeholder=\"Team Name\">\n          </div>\n          <div class=\"form-row\">\n            <div class=\"form-group col\">\n                <label> Start Date</label>\n                <input type=\"text\" class=\"form-control\" name=\"teamName\" placeholder=\"Team Name\">\n            </div>\n            <div class=\"form-group col\">\n                <label> End Date</label>\n                <input type=\"text\" class=\"form-control\" name=\"teamName\" placeholder=\"Team Name\">\n            </div>\n          </div>\n          <div class=\"form-group\">\n              <button type=\"submit\" class=\"btn btn-info\">\n                <i class=\"fa fa-database\"></i>Submit</button>\n          </div>\n        </form>  \n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'TeamComponent',\n  props: {\n  },\n    data(){\n      return{\n          teams: [],\n          viewTitle: 'Team Management',\n          name: '',\n          startDate: '',\n          endDate: '',\n         \n      }\n  },\n\n  methods:{\n    //return teams\n    getAllTeams(){\n      crudAxios.get(`http://localhost:5000/api/teams`).then(data =>{\n        this.teams = data.data\n        console.log('data', data.data);\n      })\n    },\n    //add new team\n    insertPost(name, startDate, endDate){\n      crudAxios.post(`http://localhost:5000/api/teams`, { \n          name: name,\n          startDate: startDate,\n          endDate: endDate\n          })\n      .then(this.name = name)\n      .then(this.startDate = startDate)\n      .then(this.endDate = endDate)\n    //   .finally(this.getAllPosts())\n    },\n\n    //delete team\n    deleteTeam(id){\n      crudAxios.delete(`http://localhost:5000/api/teams/${id}`)\n    //   .finally(this.getAllPosts())\n      \n    },\n    //update team\n      editTeam(id, text){\n        // text = this.$refs.textField.value\n        crudAxios.post(`http://localhost:5000/api/posts/${id}`,\n        { text: text,\n        updatedAt: new Date()})\n        .then(this.text = text)\n        .then(this.shouldDisable = false)\n         .finally(this.getAllPosts())\n        console.log('el',text)\n         \n      }\n  },\n  created(){\n    this.getAllTeams();\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.teams{\n    background-color: #0dcaf0;\n    padding: 20px;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  /* border: 1px solid #dddddd; */\n  text-align: left;\n  padding: 8px;\n}\n\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n</style>\n"],"sourceRoot":""}]}