{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue","mtime":1639917750960},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/babel.config.js","mtime":1639852633330},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCBjcnVkQXhpb3MgZnJvbSAnLi4vY29yZS9jcnVkQXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Bvc3RDb21wb25lbnQnLAogIHByb3BzOiB7fSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdLAogICAgICAvLyB0ZXh0OiAnJywKICAgICAgc2hvdWxkRGlzYWJsZTogdHJ1ZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vcmV0dXJuIHBvc3RzCiAgICBnZXRBbGxQb3N0czogZnVuY3Rpb24gZ2V0QWxsUG9zdHMoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBjcnVkQXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL3Bvc3RzIikudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIF90aGlzLnBvc3RzID0gZGF0YS5kYXRhOwogICAgICAgIGNvbnNvbGUubG9nKCdkYXRhJywgZGF0YS5kYXRhKTsKICAgICAgfSk7CiAgICB9LAogICAgLy9hZGQgbmV3IHBvc3QKICAgIGluc2VydFBvc3Q6IGZ1bmN0aW9uIGluc2VydFBvc3QodGV4dCkgewogICAgICBjcnVkQXhpb3MucG9zdCgiaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9wb3N0cyIsIHsKICAgICAgICB0ZXh0OiB0ZXh0CiAgICAgIH0pLnRoZW4odGhpcy50ZXh0ID0gdGV4dCkuZmluYWxseSh0aGlzLmdldEFsbFBvc3RzKCkpOwogICAgfSwKICAgIC8vZGVsZXRlIHBvc3QKICAgIGRlbGV0ZVBvc3Q6IGZ1bmN0aW9uIGRlbGV0ZVBvc3QoaWQpIHsKICAgICAgY3J1ZEF4aW9zLmRlbGV0ZSgiaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9wb3N0cy8iLmNvbmNhdChpZCkpLmZpbmFsbHkodGhpcy5nZXRBbGxQb3N0cygpKTsKICAgIH0sCiAgICAvL3VwZGF0ZSBwb3N0CiAgICBlZGl0UG9zdDogZnVuY3Rpb24gZWRpdFBvc3QoaWQsIHRleHQpIHsKICAgICAgLy8gdGV4dCA9IHRoaXMuJHJlZnMudGV4dEZpZWxkLnZhbHVlCiAgICAgIGNydWRBeGlvcy5wb3N0KCJodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL3Bvc3RzLyIuY29uY2F0KGlkKSwgewogICAgICAgIHRleHQ6IHRleHQsCiAgICAgICAgdXBkYXRlZEF0OiBuZXcgRGF0ZSgpCiAgICAgIH0pLnRoZW4odGhpcy50ZXh0ID0gdGV4dCkudGhlbih0aGlzLnNob3VsZERpc2FibGUgPSBmYWxzZSkuZmluYWxseSh0aGlzLmdldEFsbFBvc3RzKCkpOwogICAgICBjb25zb2xlLmxvZygnZWwnLCB0ZXh0KTsKICAgIH0KICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldEFsbFBvc3RzKCk7CiAgfQp9Ow=="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/components/PostComponent.vue"],"names":[],"mappings":";AA6BA,OAAO,SAAP,MAAsB,mBAAtB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,eADO;AAEb,EAAA,KAAK,EAAE,EAFM;AAIX,EAAA,IAJW,kBAIL;AACJ,WAAM;AACF,MAAA,KAAK,EAAE,EADL;AAEF;AACA,MAAA,aAAa,EAAE;AAHb,KAAN;AAKH,GAVY;AAYb,EAAA,OAAO,EAAC;AACN;AACA,IAAA,WAFM,yBAEO;AAAA;;AACX,MAAA,SAAS,CAAC,GAAV,oCAAiD,IAAjD,CAAsD,UAAA,IAAG,EAAI;AAC3D,QAAA,KAAI,CAAC,KAAL,GAAa,IAAI,CAAC,IAAlB;AACA,QAAA,OAAO,CAAC,GAAR,CAAY,MAAZ,EAAoB,IAAI,CAAC,IAAzB;AACD,OAHD;AAID,KAPK;AAQN;AACA,IAAA,UATM,sBASK,IATL,EASU;AACd,MAAA,SAAS,CAAC,IAAV,oCAAkD;AAAE,QAAA,IAAI,EAAE;AAAR,OAAlD,EACC,IADD,CACM,KAAK,IAAL,GAAY,IADlB,EAEC,OAFD,CAES,KAAK,WAAL,EAFT;AAGD,KAbK;AAeN;AACA,IAAA,UAhBM,sBAgBK,EAhBL,EAgBQ;AACZ,MAAA,SAAS,CAAC,MAAV,2CAAoD,EAApD,GACC,OADD,CACS,KAAK,WAAL,EADT;AAGD,KApBK;AAqBN;AACE,IAAA,QAtBI,oBAsBK,EAtBL,EAsBS,IAtBT,EAsBc;AAChB;AACA,MAAA,SAAS,CAAC,IAAV,2CAAkD,EAAlD,GACA;AAAE,QAAA,IAAI,EAAE,IAAR;AACA,QAAA,SAAS,EAAE,IAAI,IAAJ;AADX,OADA,EAGC,IAHD,CAGM,KAAK,IAAL,GAAY,IAHlB,EAIC,IAJD,CAIM,KAAK,aAAL,GAAqB,KAJ3B,EAKE,OALF,CAKU,KAAK,WAAL,EALV;AAMA,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ,EAAiB,IAAjB;AAEF;AAhCI,GAZK;AA8Cb,EAAA,OA9Ca,qBA8CJ;AACP,SAAK,WAAL;AACF;AAhDa,CAAf","sourcesContent":["<template>\n  <div class=\"Posts\">\n   <table>\n    <tr>\n      <th>text</th>\n      <th>Created At</th>\n      <th>updated At</th>\n      <th>Edit</th>\n      <th>Delete</th>\n    </tr>\n    <tr v-for=\"post in posts\" :key=\"post._id\">\n      <!-- <td>{{post.text}}</td> -->\n      <td><input type=\"text\" :readonly=\"shouldDisable\" @keyup.enter=\"getAllPosts\" ref=\"textField\" v-model=\"post.text\">{{post.text}}</td>\n      <td>{{post.createdAt}}</td>\n      <td v-if=\"post.updatedAt\">{{post.updatedAt}}</td>\n      <td><span @click=\"editPost(post._id, post.text)\">Edit</span></td>\n      <td><span @click=\"deletePost(post._id)\">Delete</span></td>\n    </tr>\n \n <!-- <input type=\"text\" v-model=\"text\" /><button @click=\"insertPost(text)\">add</button> -->\n\n</table>\n    \n    \n    \n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'PostComponent',\n  props: {\n  },\n    data(){\n      return{\n          posts: [],\n          // text: '',\n          shouldDisable: true\n      }\n  },\n\n  methods:{\n    //return posts\n    getAllPosts(){\n      crudAxios.get(`http://localhost:5000/api/posts`).then(data =>{\n        this.posts = data.data\n        console.log('data', data.data);\n      })\n    },\n    //add new post\n    insertPost(text){\n      crudAxios.post(`http://localhost:5000/api/posts`, { text: text} )\n      .then(this.text = text)\n      .finally(this.getAllPosts())\n    },\n\n    //delete post\n    deletePost(id){\n      crudAxios.delete(`http://localhost:5000/api/posts/${id}`)\n      .finally(this.getAllPosts())\n      \n    },\n    //update post\n      editPost(id, text){\n        // text = this.$refs.textField.value\n        crudAxios.post(`http://localhost:5000/api/posts/${id}`,\n        { text: text,\n        updatedAt: new Date()})\n        .then(this.text = text)\n        .then(this.shouldDisable = false)\n         .finally(this.getAllPosts())\n        console.log('el',text)\n         \n      }\n  },\n  created(){\n    this.getAllPosts();\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\ntable {\n  font-family: arial, sans-serif;\n  border-collapse: collapse;\n  width: 100%;\n}\n\ntd, th {\n  /* border: 1px solid #dddddd; */\n  text-align: left;\n  padding: 8px;\n}\n\ntr:nth-child(even) {\n  background-color: #dddddd;\n}\n</style>\n"],"sourceRoot":""}]}