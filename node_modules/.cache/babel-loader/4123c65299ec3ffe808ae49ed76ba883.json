{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue","mtime":1640281584777},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/babel.config.js","mtime":1639852633330},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZS5qcyI7CmltcG9ydCBjcnVkQXhpb3MgZnJvbSAnLi4vY29yZS9jcnVkQXhpb3MnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogJ1Rhc2tzJywKICBwcm9wczoge30sCiAgY29tcG9uZW50czoge30sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2tzOiBbXSwKICAgICAgbG9nZ2VkVGltZUluU2VjOiAnJwogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vcmV0dXJuIHRhc2tzCiAgICBnZXRBbGxUYXNrczogZnVuY3Rpb24gZ2V0QWxsVGFza3MoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICBjcnVkQXhpb3MuZ2V0KCJodHRwOi8vbG9jYWxob3N0OjUwMDAvYXBpL3Rhc2tzIikudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgIF90aGlzLnRhc2tzID0gZGF0YS5kYXRhOwoKICAgICAgICBfdGhpcy50YXNrcy5mb3JFYWNoKGZ1bmN0aW9uIChlbGVtZW50KSB7CiAgICAgICAgICByZXR1cm4gY29uc29sZS5sb2coJ2VsZW1lbnQnLCBlbGVtZW50LmxvZ3MubG9nZ2VkVGltZSwgX3RoaXMubG9nZ2VkVGltZUluU2VjID0gZWxlbWVudC5sb2dzLmxvZ2dlZFRpbWUpOwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEFsbFRhc2tzKCk7CiAgfSwKICBjb21wdXRlZDogewogICAgLy8gYSBjb21wdXRlZCBnZXR0ZXIKICAgIGxvZ2dlZFRpbWU6IGZ1bmN0aW9uIGxvZ2dlZFRpbWUoKSB7CiAgICAgIHZhciB0aW1lID0gdGhpcy5sb2dnZWRUaW1lSW5TZWMuc2xpY2UoLTEpOwogICAgICB2YXIgdGltZVZhbHVlID0gdGhpcy5sb2dnZWRUaW1lSW5TZWMuc2xpY2UoMCwgLTEpOwoKICAgICAgaWYgKHRpbWUgPT0gJ2gnKSB7CiAgICAgICAgdmFyIG1pbGxpc2Vjb25kcyA9IHRpbWVWYWx1ZSAqIDYwICogNjAgKiAxMDAwOwogICAgICB9IGVsc2UgaWYgKHRpbWUgPT0gJ20nKSB7CiAgICAgICAgbWlsbGlzZWNvbmRzID0gdGltZVZhbHVlICogNjAgKiAxMDAwOwogICAgICB9CgogICAgICByZXR1cm4gbWlsbGlzZWNvbmRzOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/Task.vue"],"names":[],"mappings":";;;AAgCA,OAAO,SAAP,MAAsB,mBAAtB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,OADO;AAEb,EAAA,KAAK,EAAE,EAFM;AAIb,EAAA,UAAU,EAAE,EAJC;AAMX,EAAA,IANW,kBAML;AACJ,WAAM;AACF,MAAA,KAAK,EAAE,EADL;AAEF,MAAA,eAAe,EAAC;AAFd,KAAN;AAIH,GAXY;AAab,EAAA,OAAO,EAAC;AACN;AACA,IAAA,WAFM,yBAEO;AAAA;;AACX,MAAA,SAAS,CAAC,GAAV,oCAAiD,IAAjD,CAAsD,UAAA,IAAG,EAAI;AAC3D,QAAA,KAAI,CAAC,KAAL,GAAa,IAAI,CAAC,IAAlB;;AAEA,QAAA,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,UAAA,OAAM;AAAA,iBACzB,OAAO,CAAC,GAAR,CAAY,SAAZ,EAAuB,OAAO,CAAC,IAAR,CAAa,UAApC,EACA,KAAI,CAAC,eAAL,GAAuB,OAAO,CAAC,IAAR,CAAa,UADpC,CADyB;AAAA,SAAzB;AAGD,OAND;AAOF;AAVM,GAbK;AAyBb,EAAA,OAzBa,qBAyBJ;AACP,SAAK,WAAL;AACD,GA3BY;AA4BZ,EAAA,QAAQ,EAAE;AACT;AACA,IAAA,UAAU,EAAE,sBAAY;AACrB,UAAM,IAAG,GAAI,KAAK,eAAL,CAAqB,KAArB,CAA2B,CAAC,CAA5B,CAAb;AACA,UAAM,SAAQ,GAAI,KAAK,eAAL,CAAqB,KAArB,CAA2B,CAA3B,EAA6B,CAAC,CAA9B,CAAlB;;AACA,UAAI,IAAG,IAAK,GAAZ,EAAgB;AACX,YAAI,YAAW,GAAI,SAAQ,GAAI,EAAZ,GAAiB,EAAjB,GAAqB,IAAxC;AACL,OAFA,MAGK,IAAI,IAAG,IAAK,GAAZ,EAAgB;AAChB,QAAA,YAAW,GAAI,SAAQ,GAAI,EAAZ,GAAiB,IAAhC;AACL;;AACC,aAAO,YAAP;AACJ;AAZS;AA5BE,CAAf","sourcesContent":["<template>\n  <div>\n    <div class=\"tasks\">\n        <h3>Tasks</h3>\n      <table class=\"table table-striped\">\n        <thead>\n        <tr>\n          <th>Task code</th>\n          <th>task Name</th>\n          <th>Task Description</th>\n          <th>Employee Code</th>\n          <th>Logged Time</th>\n          <th>Start Date</th>\n        </tr>\n        </thead>\n      <tbody>\n        <tr v-for=\"task in tasks\" :key=\"task._id\">\n            <td>{{task.taskCode}}</td>\n            <td>{{task.taskName}}</td>\n            <td>{{task.taskDesc}}</td>\n            <td>{{task.logs.code}}</td>\n             <td>{{loggedTime}}</td>\n              <td>{{task.logs.startDate}}</td>\n        </tr>\n      </tbody>\n    </table>\n\n    </div>\n  </div>\n</template>\n\n<script>\nimport crudAxios from '../core/crudAxios'\nexport default {\n  name: 'Tasks',\n  props: {\n  },\n  components: {\n  },\n    data(){\n      return{\n          tasks: [],\n          loggedTimeInSec:''\n      }\n  },\n\n  methods:{\n    //return tasks\n    getAllTasks(){\n      crudAxios.get(`http://localhost:5000/api/tasks`).then(data =>{\n        this.tasks = data.data\n        \n        this.tasks.forEach(element => \n        console.log('element', element.logs.loggedTime,\n        this.loggedTimeInSec = element.logs.loggedTime))\n      })\n    }\n  },\n  mounted(){\n    this.getAllTasks();\n  },\n   computed: {\n    // a computed getter\n    loggedTime: function () {\n       const time = this.loggedTimeInSec.slice(-1);\n       const timeValue = this.loggedTimeInSec.slice(0,-1);\n       if( time == 'h'){\n            var milliseconds = timeValue * 60 * 60 *1000;\n       }\n       else if( time == 'm'){\n            milliseconds = timeValue * 60 * 1000;\n       }\n        return milliseconds\n    }\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.tasks{\n    padding: 20px;\n}\n.fa{\n    cursor: pointer;\n}\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\n\n</style>\n"],"sourceRoot":""}]}