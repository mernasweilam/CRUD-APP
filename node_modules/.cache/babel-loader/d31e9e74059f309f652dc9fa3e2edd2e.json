{"remainingRequest":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue","mtime":1640694218383},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/babel.config.js","mtime":1639852633330},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Merna.Hossam/Desktop/crud-app-backend/client/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUuanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmNsdWRlcy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5pbmNsdWRlcy5qcyI7CmltcG9ydCBjcnVkQXhpb3MgZnJvbSAnLi4vY29yZS9jcnVkQXhpb3MnOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgU2VhcmNoQ29tcG9uZW50IGZyb20gJy4uL2NvbXBvbmVudHMvU2VhcmNoQ29tcG9uZW50LnZ1ZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiU2VhcmNoUmVzdWx0IiwKICBjb21wb25lbnRzOiB7CiAgICBTZWFyY2hDb21wb25lbnQ6IFNlYXJjaENvbXBvbmVudAogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRhc2tzOiBbXSwKICAgICAgZW1wbG95ZWVzOiBbXSwKICAgICAgdGVhbXM6IFtdLAogICAgICBkaXNhYmxlOiBmYWxzZQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIC8vZmV0Y2ggc2VhcmNoIHJlc3VsdCB3aGVuIHVzZXIgaW5pdGlhbGx5IHNlYXJjaCBmb3IgYW55IHF1ZXJ5CiAgICBmZXRjaFNlYXJjaFJlc3VsdDogZnVuY3Rpb24gZmV0Y2hTZWFyY2hSZXN1bHQocSkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGVtcGxveWVlc1JlcXVlc3QgPSAnaHR0cDovL2xvY2FsaG9zdDo1MDAwL2FwaS9lbXBsb3llZXMnOwogICAgICB2YXIgdGFza3NSZXF1ZXN0ID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvdGFza3MnOwogICAgICB2YXIgdGVhbXNSZXF1ZXN0ID0gJ2h0dHA6Ly9sb2NhbGhvc3Q6NTAwMC9hcGkvdGVhbXMnOwogICAgICB0aGlzLiRyb3V0ZXIucHVzaCh7CiAgICAgICAgcXVlcnk6IHsKICAgICAgICAgIHF1ZXJ5OiBlbmNvZGVVUklDb21wb25lbnQocSkKICAgICAgICB9CiAgICAgIH0pOwogICAgICBheGlvcy5hbGwoW2VtcGxveWVlc1JlcXVlc3QsIHRhc2tzUmVxdWVzdCwgdGVhbXNSZXF1ZXN0XSkudGhlbihheGlvcy5zcHJlYWQoZnVuY3Rpb24gKCkgewogICAgICAgIHZhciBlbXBsb3llZXNSZXNwb25zZSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMCA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1swXTsKICAgICAgICB2YXIgdGFza3NSZXNwb25zZSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMSA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1sxXTsKICAgICAgICB2YXIgdGVhbXNSZXNwb25zZSA9IGFyZ3VtZW50cy5sZW5ndGggPD0gMiA/IHVuZGVmaW5lZCA6IGFyZ3VtZW50c1syXTsgLy9lbXBsb3llZXMKCiAgICAgICAgY3J1ZEF4aW9zLmdldChlbXBsb3llZXNSZXNwb25zZSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgdmFyIHNlYXJjaGVkRW1wbG95ZWVzID0gZGF0YS5kYXRhLmZpbHRlcihmdW5jdGlvbiAoZW1wKSB7CiAgICAgICAgICAgIHJldHVybiBlbXAubmFtZS50b0xvd2VyQ2FzZSgpID09PSBxOwogICAgICAgICAgfSk7CiAgICAgICAgICBfdGhpcy5lbXBsb3llZXMgPSBzZWFyY2hlZEVtcGxveWVlczsKICAgICAgICB9KTsgLy90YXNrcwoKICAgICAgICBjcnVkQXhpb3MuZ2V0KHRhc2tzUmVzcG9uc2UpLnRoZW4oZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgIHZhciBzZWFyY2hlZFRhc2tzID0gZGF0YS5kYXRhLmZpbHRlcihmdW5jdGlvbiAodGFzaykgewogICAgICAgICAgICByZXR1cm4gdGFzay50YXNrTmFtZS50b0xvd2VyQ2FzZSgpID09PSBxIHx8IHRhc2sudGFza05hbWUuaW5jbHVkZXMocSkgfHwgdGFzay50YXNrRGVzYy5pbmNsdWRlcyhxKTsKICAgICAgICAgIH0pOwogICAgICAgICAgX3RoaXMudGFza3MgPSBzZWFyY2hlZFRhc2tzOwogICAgICAgIH0pOyAvL3RlYW1zCgogICAgICAgIGNydWRBeGlvcy5nZXQodGVhbXNSZXNwb25zZSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgdmFyIHNlYXJjaGVkVGVhbXMgPSBkYXRhLmRhdGEuZmlsdGVyKGZ1bmN0aW9uICh0ZWFtKSB7CiAgICAgICAgICAgIHJldHVybiB0ZWFtLm5hbWUudG9Mb3dlckNhc2UoKSA9PT0gcSB8fCB0ZWFtLm5hbWUuaW5jbHVkZXMocSk7CiAgICAgICAgICB9KTsKICAgICAgICAgIF90aGlzLnRlYW1zID0gc2VhcmNoZWRUZWFtczsKICAgICAgICB9KTsKICAgICAgfSkpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLiRyb3V0ZS5xdWVyeS5xdWVyeSkgewogICAgICB0aGlzLnQodGhpcy4kcm91dGUucXVlcnkucXVlcnkpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["/Users/Merna.Hossam/Desktop/crud-app-backend/client/src/views/SearchResult.vue"],"names":[],"mappings":";;;;;AA2EA,OAAO,SAAP,MAAsB,mBAAtB;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,MAA4B,mCAA5B;AACA,eAAe;AACb,EAAA,IAAI,EAAE,cADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,eAAc,EAAd;AADU,GAFC;AAMb,EAAA,IANa,kBAMP;AACF,WAAM;AACD,MAAA,KAAK,EAAE,EADN;AAEA,MAAA,SAAS,EAAE,EAFX;AAGA,MAAA,KAAK,EAAE,EAHP;AAIF,MAAA,OAAO,EAAE;AAJP,KAAN;AAMH,GAbY;AAeb,EAAA,OAAO,EAAE;AACP;AACA,IAAA,iBAFO,6BAEW,CAFX,EAEa;AAAA;;AAChB,UAAI,gBAAe,GAAI,qCAAvB;AACA,UAAI,YAAW,GAAI,iCAAnB;AACA,UAAI,YAAW,GAAI,iCAAnB;AACF,WAAK,OAAL,CAAa,IAAb,CAAkB;AAAE,QAAA,KAAK,EAAE;AAAE,UAAA,KAAK,EAAE,kBAAkB,CAAC,CAAD;AAA3B;AAAT,OAAlB;AACE,MAAA,KAAK,CAAC,GAAN,CAAU,CAAC,gBAAD,EAAmB,YAAnB,EAAiC,YAAjC,CAAV,EAA0D,IAA1D,CAA+D,KAAK,CAAC,MAAN,CAAa,YAAkB;AAC1F,YAAM,iBAAiB,mDAAvB;AACA,YAAM,aAAa,mDAAnB;AACA,YAAM,aAAa,mDAAnB,CAH0F,CAI1F;;AACD,QAAA,SAAS,CAAC,GAAV,CAAc,iBAAd,EACE,IADF,CACO,UAAA,IAAG,EAAK;AACV,cAAM,iBAAgB,GAAI,IAAI,CAAC,IAAL,CAAU,MAAV,CAAkB,UAAA,GAAE,EAAK;AAC/C,mBAAO,GAAG,CAAC,IAAJ,CAAS,WAAT,OAA2B,CAAlC;AACH,WAFyB,CAA1B;AAGJ,UAAA,KAAI,CAAC,SAAL,GAAiB,iBAAjB;AACC,SANF,EAL2F,CAY1F;;AACD,QAAA,SAAS,CAAC,GAAV,CAAc,aAAd,EACE,IADF,CACO,UAAA,IAAG,EAAK;AACV,cAAM,aAAa,GAAE,IAAI,CAAC,IAAL,CAAU,MAAV,CAAkB,UAAA,IAAG,EAAK;AAC3C,mBAAO,IAAI,CAAC,QAAL,CAAc,WAAd,OAAgC,CAAhC,IAAqC,IAAI,CAAC,QAAL,CAAc,QAAd,CAAuB,CAAvB,CAArC,IAAkE,IAAI,CAAC,QAAL,CAAc,QAAd,CAAuB,CAAvB,CAAzE;AACH,WAFoB,CAArB;AAGJ,UAAA,KAAI,CAAC,KAAL,GAAY,aAAZ;AAEC,SAPF,EAb2F,CAqB1F;;AACD,QAAA,SAAS,CAAC,GAAV,CAAc,aAAd,EACE,IADF,CACO,UAAA,IAAG,EAAK;AACV,cAAM,aAAY,GAAI,IAAI,CAAC,IAAL,CAAU,MAAV,CAAkB,UAAA,IAAG,EAAK;AAC5C,mBAAO,IAAI,CAAC,IAAL,CAAU,WAAV,OAA4B,CAA5B,IAAiC,IAAI,CAAC,IAAL,CAAU,QAAV,CAAmB,CAAnB,CAAxC;AACH,WAFqB,CAAtB;AAGJ,UAAA,KAAI,CAAC,KAAL,GAAY,aAAZ;AAEC,SAPF;AAQF,OA9B8D,CAA/D;AA+BJ;AAtCO,GAfI;AAwDb,EAAA,OAxDa,qBAwDH;AACR,QAAG,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAArB,EAA4B;AAC1B,WAAK,CAAL,CAAO,KAAK,MAAL,CAAY,KAAZ,CAAkB,KAAzB;AACF;AACF;AA5Da,CAAf","sourcesContent":["<template>\n  <div class=\"search-result\">\n      <SearchComponent @searchActivated=\"fetchSearchResult\"/>\n    <div class=\"content\" v-if=\"employees.length\">\n       <!-- <Employee v-for=\"employee in employees\" :key=\"employee.id\"/> -->\n        <table class=\"table table-striped\">\n            <thead>\n            <tr>\n                <!-- <th>Employee code</th> -->\n                <th>Employee name</th>\n                <th>Join Date</th>\n                <th>Skills</th>\n            </tr>\n            </thead>\n            <tbody>\n                <tr v-for=\"employee in employees\" :key=\"employee._id\">\n                    <td>{{employee.name}}</td>\n                    <td>{{employee.joinDate}}</td>\n                    <td>\n                        <ul v-for=\"skill in employee.skills\" :key=\"skill\">\n                            <li>{{skill}}</li>\n                        </ul>\n                    </td>  \n                </tr>\n            </tbody>\n        </table>\n    </div>\n    <div class=\"content\" v-if=\"tasks.length\">\n        <table class=\"table table-striped\">\n                <thead>\n                <tr>\n                <th>Task code</th>\n                <th>task Name</th>\n                <th>Task Description</th>\n                <th>Employee Code</th>\n                <th>Logged Time</th>\n                <th>Start Date</th>\n                </tr>\n                </thead>\n            <tbody>\n                <tr v-for=\"task in tasks\" :key=\"task._id\">\n                    <td>{{task.taskCode}}</td>\n                    <td>{{task.taskName}}</td>\n                    <td>{{task.taskDesc}}</td>\n                    <td>{{task.logs.code}}</td>\n                    <td>{{loggedTime}}</td>\n                    <td>{{task.logs.startDate}}</td>\n                </tr>\n            </tbody>\n            </table>\n    </div>\n    <div class=\"content\" v-if=\"teams.length\">\n        <table class=\"table table-striped\" >\n            <thead>\n            <tr>\n            <th>Team name</th>\n            <th>StartDate</th>\n            <th>EndDate</th>\n            </tr>\n            </thead>\n        <tbody>\n            <tr v-for=\"team in teams\" :key=\"team._id\">\n            <td>{{team.name}}</td>\n            <td>{{team.startDate}}</td>\n            <td v-if=\"team.endDate\">{{team.endDate}}</td>\n            <td v-else>Team still exists</td>\n        </tr>\n        </tbody>\n        </table>\n    </div>\n  </div>\n</template>\n<style>\n</style>\n<script>\nimport crudAxios from '../core/crudAxios'\nimport axios from 'axios';\nimport SearchComponent from '../components/SearchComponent.vue'\nexport default {\n  name: \"SearchResult\",\n  components: {\n    SearchComponent\n  },\n  \n  data(){\n      return{\n           tasks: [],\n            employees: [],\n            teams: [],\n          disable: false,\n      }\n  },\n\n  methods: {\n    //fetch search result when user initially search for any query\n    fetchSearchResult(q){\n        let employeesRequest = 'http://localhost:5000/api/employees'\n        let tasksRequest = 'http://localhost:5000/api/tasks'\n        let teamsRequest = 'http://localhost:5000/api/teams'\n      this.$router.push({ query: { query: encodeURIComponent(q)}});\n        axios.all([employeesRequest, tasksRequest, teamsRequest]).then(axios.spread((...responses) => {\n            const employeesResponse= responses[0]\n            const tasksResponse= responses[1]\n            const teamsResponse= responses[2]\n            //employees\n           crudAxios.get(employeesResponse) \n            .then(data => {\n                const searchedEmployees = data.data.filter( emp => {\n                    return emp.name.toLowerCase() === q\n                });  \n            this.employees = searchedEmployees\n            })\n            //tasks\n           crudAxios.get(tasksResponse) \n            .then(data => {\n                const searchedTasks= data.data.filter( task => {\n                    return task.taskName.toLowerCase() === q || task.taskName.includes(q) || task.taskDesc.includes(q)\n                });   \n            this.tasks= searchedTasks\n\n            })\n            //teams\n           crudAxios.get(teamsResponse) \n            .then(data => {\n                const searchedTeams = data.data.filter( team => {\n                    return team.name.toLowerCase() === q || team.name.includes(q)\n                });   \n            this.teams= searchedTeams\n\n            })\n        }))\n    }\n\n  },\n  created() {\n    if(this.$route.query.query) {\n      this.t(this.$route.query.query)\n    }\n  }\n}\n</script>\n"],"sourceRoot":""}]}